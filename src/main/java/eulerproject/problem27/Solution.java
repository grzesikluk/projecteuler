package eulerproject.problem27;

import java.util.ArrayList;

/**
 * Created by grzesikl on 18/08/2016.
 */
public class Solution {

    private static final int MAX = 100000;

    private static final int[] primeArray = generatePrimes(MAX);

    public static void main(String[] args) {
        int max = 0;
        int temp = 0;
        int a_max = 0;
        int b_max = 0;

        System.out.println("Starting ...");
        for(int a = -999; a < 1000; a++) {
            for (int b = -999; b <= 1000; b++ ){
                temp = getNumberOfConsPrimes(a,b);
                if (temp > max) {
                    max = temp;
                    a_max = a;
                    b_max = b;
                    System.out.println("found maximum a="+ a_max + " b= "+b_max+ " for number: "+max+" cons primes.");
                }
            }
        }
        System.out.println("Result is a*b" + a_max*b_max+ " for number: "+max+" cons primes.");

    }

    /**
     * return number of consecutive prime number generated by n^2 + an + b
     * @param a
     * @param b
     * @return
     */
    public static int getNumberOfConsPrimes(int a, int b) {
        int n = 0;
        int temp = 1;
        int counter=0;

        temp = getNumberFromQuadEquation(a,b,n);
        while(isPrime(temp)){
            n++;
            temp = getNumberFromQuadEquation(a,b,n);
        }

        return n-1;

    }

    public static int getNumberFromQuadEquation(int a, int b, int n) {
        return n*n+a*n+b;
    }


    /**
     * Generate array of primes
     *
     * @param max
     * @return
     */
    public static int[] generatePrimes(int max) {

        int[] varTable = new int[max];

        for (int i=0;i<max;i++) {
            varTable[i]=i;
        }

        for (int i=2;i<max/2;i++) {
            for (int j=2;j*i<max;j++) {
                varTable[i*j]=0;
            }
        }
        return varTable;

    }

    public static boolean isPrime(int k) {
        return (primeArray[Math.abs(k)] != 0);
    }

}
